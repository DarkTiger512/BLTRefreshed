<adonisControls:AdonisWindow x:Class="BLTConfigure.BLTConfigureWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
              xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
              xmlns:local="clr-namespace:BLTConfigure"
              xmlns:fa="http://schemas.fontawesome.io/icons/"
              xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
              xmlns:adonisUi="clr-namespace:AdonisUI;assembly=AdonisUI"
              xmlns:adonisControls="clr-namespace:AdonisUI.Controls;assembly=AdonisUI"
              mc:Ignorable="d"
              ResizeMode="CanResize"
              Title="BLT Configure Window" Height="750" Width="650" d:DataContext="{d:DesignInstance local:BLTConfigureWindow}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/AdonisUI;component/ColorSchemes/Dark.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/AdonisUI.ClassicTheme;component/Resources.xaml"/>
                <ResourceDictionary Source="ResourceDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window" BasedOn="{StaticResource {x:Type Window}}"/>
    </Window.Style>
    <DockPanel LastChildFill="True">
        <!-- <DockPanel.Resources> -->
        <!--     <Style TargetType="TextBlock"> -->
        <!--         <Setter Property="Margin" Value="2" /> -->
        <!--         <Setter Property="Padding" Value="2" /> -->
        <!--         <Setter Property="FontSize" Value="14" /> -->
        <!--         <Setter Property="TextWrapping" Value="Wrap"/> -->
        <!--     </Style> -->
        <!--     <Style TargetType="Button"> -->
        <!--         <Setter Property="Margin" Value="5" /> -->
        <!--         <Setter Property="Padding" Value="20 5" /> -->
        <!--         <Setter Property="FontSize" Value="14" /> -->
        <!--     </Style> -->
        <!--     <Style TargetType="xctk:DropDownButton"> -->
        <!--         <Setter Property="Margin" Value="5" /> -->
        <!--         <Setter Property="Padding" Value="20 5" /> -->
        <!--         <Setter Property="FontSize" Value="14" /> -->
        <!--     </Style> -->
        <!--     <Style TargetType="ListBox"> -->
        <!--         <Setter Property="Margin" Value="5" /> -->
        <!--         <Setter Property="Padding" Value="5" /> -->
        <!--     </Style> -->
        <!--     <Style TargetType="TabItem"> -->
        <!--         <Setter Property="FontSize" Value="15" /> -->
        <!--         <Setter Property="Padding" Value="5" /> -->
        <!--     </Style> -->
        <!-- </DockPanel.Resources> -->
        <TextBlock DockPanel.Dock="Bottom" HorizontalAlignment="Center" FontSize="16" FontWeight="DemiBold" Grid.Row="1">Restart the game to apply changes</TextBlock>
        <TabControl Name="TabControl" SelectedIndex="0">
            <TabItem>
                <TabItem.Header>
                    <TextBlock Margin="10 2">Configuration</TextBlock>
                </TabItem.Header>
                <DockPanel LastChildFill="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="5" />
                            <ColumnDefinition Width="1.5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid>
                            <Grid.Resources>
                                <Style TargetType="xctk:DropDownButton">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static adonisUi:Brushes.ForegroundBrush}}"/>
                                    <Setter Property="Background" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer0BackgroundBrush}}"/>
                                    <Setter Property="DropDownContentBackground" Value="{DynamicResource {x:Static adonisUi:Brushes.Layer1BackgroundBrush}}"/>
                                    
                                </Style>
                                <DataTemplate x:Key="NewItemHDT" DataType="{x:Type local:NewViewModel}">
                                    <Button Command="{Binding Command}" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" Padding="4" Margin="4">
                                        <Grid HorizontalAlignment="Stretch">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" HorizontalAlignment="Left" Text="{Binding Name}" FontWeight="Bold" FontSize="16"/>
                                            <TextBlock Grid.Row="0" HorizontalAlignment="Right" Text="{Binding Module}" FontWeight="Bold" FontSize="12" Foreground="DimGray"/>
                                            <TextBlock Grid.Row="1" HorizontalAlignment="Stretch" Text="{Binding Description}" TextWrapping="Wrap"/>
                                        </Grid>
                                    </Button>
                                </DataTemplate>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <TextBlock FontSize="14" FontWeight="Bold">Rewards</TextBlock>
                            <ListBox Grid.Row="1" 
                                     ItemsSource="{Binding Rewards, Mode=OneWay}"
                                     SelectionChanged="Rewards_OnSelectionChanged" 
                                     SelectionMode="Single"
                                     Name="RewardsListBox"/>
                            <DockPanel Grid.Row="2">
                                <xctk:DropDownButton Content="Add" HorizontalAlignment="Left" DockPanel.Dock="Left">
                                    <xctk:DropDownButton.DropDownContent>
                                        <ItemsControl ItemsSource="{Binding ActionsViewModel}"
                                                     MaxWidth="300"
                                                     ItemTemplate="{StaticResource NewItemHDT}"
                                                     Background="Transparent"
                                                     />
                                    </xctk:DropDownButton.DropDownContent>
                                </xctk:DropDownButton>
                                <Button HorizontalAlignment="Right" DockPanel.Dock="Right" Click="DeleteReward_OnClick">Delete Selected</Button>
                            </DockPanel>
                            <Separator Grid.Row="3" Padding="10"></Separator>
                            <TextBlock FontSize="14" FontWeight="Bold" Grid.Row="4">Commands</TextBlock>
                            <ListBox Grid.Row="5"
                                     ItemsSource="{Binding Commands, Mode=OneWay}"
                                     SelectionChanged="Commands_OnSelectionChanged"
                                     SelectionMode="Single"
                                     Name="CommandsListBox"/>
                            <DockPanel Grid.Row="6">
                                <xctk:DropDownButton Content="Add" HorizontalAlignment="Left" DockPanel.Dock="Left">
                                    <xctk:DropDownButton.DropDownContent>
                                        <ItemsControl ItemsSource="{Binding CommandHandlersViewModel}"
                                                      MaxWidth="300"
                                                      ItemTemplate="{StaticResource NewItemHDT}"
                                                      Background="Transparent"/>
                                    </xctk:DropDownButton.DropDownContent>
                                </xctk:DropDownButton>
                                <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Click="DeleteCommand_OnClick">Delete Selected</Button>
                            </DockPanel>
                        </Grid>
                        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />
                        <xctk:PropertyGrid Grid.Column="2"
                                           x:Name="PropertyGrid"
                                           AutoGenerateProperties="True"
                                           ShowSearchBox="False"
                                           ShowSortOptions="False"
                                           ShowAdvancedOptions="False"
                                           Foreground="Black"
                                           Background="DarkGray"
                                           SelectedObjectChanged="PropertyGrid_OnSelectedObjectChanged"
                                           PropertyChanged="PropertyGrid_OnPropertyChanged"
                        />
                    </Grid>
                </DockPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <TextBlock Margin="10 2">Authorize</TextBlock>
                </TabItem.Header>
                <StackPanel TextBlock.FontSize="15">
                    <StackPanel.Resources>
                        <!-- <Style TargetType="TextBlock"> -->
                        <!--     <Setter Property="FontSize" Value="15"/> -->
                        <!--     <Setter Property="Margin" Value="10"/> -->
                        <!-- </Style> -->
                        <!-- <Style TargetType="Button"> -->
                        <!--     <Setter Property="HorizontalAlignment" Value="Left"/> -->
                        <!--     <Setter Property="Margin" Value="20 5"/> -->
                        <!--     <Setter Property="Padding" Value="10 5"/> -->
                        <!-- </Style> -->
                        <!-- <Style TargetType="TextBox"> -->
                        <!--     <Setter Property="HorizontalAlignment" Value="Stretch"/> -->
                        <!--     <Setter Property="Margin" Value="20 10"/> -->
                        <!--     <Setter Property="Padding" Value="20 5"/> -->
                        <!-- </Style> -->
                        <!-- <Style TargetType="Expander"> -->
                        <!--     <Setter Property="HorizontalAlignment" Value="Stretch"/> -->
                        <!--     <Setter Property="Margin" Value="5"/> -->
                        <!--     <Setter Property="Padding" Value="5"/> -->
                        <!-- </Style> -->
                        <!-- <Style TargetType="fa:ImageAwesome"> -->
                        <!--     <Setter Property="Margin" Value="10 10"/> -->
                        <!-- </Style> -->
                    </StackPanel.Resources>
                    <TextBlock TextWrapping="Wrap">
                        When you click the button your web browser will open on a Twitch page that will request authorization for this mod. When you grant it, the page will automatically pass the authorization to the mod, at which point you can close it and return here.
                    </TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Authorize" Margin="15" HorizontalAlignment="Left" Click="GenerateToken_OnClick"/>
                        <StackPanel Name="GenerateTokenCancel" Orientation="Horizontal" Visibility="Collapsed">
                            <Button Click="CancelAuth_OnClick">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>Cancel</TextBlock>
                                    <fa:ImageAwesome Icon="Spinner" Spin="True" Height="20" Width="20" />
                                </StackPanel>
                            </Button>
                            <TextBlock FontSize="15" VerticalAlignment="Center" FontStyle="Italic" Foreground="Indigo">Switch to your web browser now to grant authorization!</TextBlock>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" MouseUp="TestTokenButton_OnClick">
                            <fa:ImageAwesome Name="AuthTokenTesting" Icon="Spinner" Spin="True" Height="20" Width="20" Visibility="Collapsed" HorizontalAlignment="Right"/>
                            <StackPanel Orientation="Horizontal" Name="AuthTokenTestSuccess" Visibility="Collapsed" >
                                <fa:ImageAwesome Icon="Check" Height="20" Width="20" Foreground="LimeGreen"/>
                                <TextBlock Margin="0" VerticalAlignment="Center" Foreground="LimeGreen" FontWeight="Bold">Authorized!</TextBlock>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Name="AuthTokenTestFailure" Visibility="Collapsed">
                                <fa:ImageAwesome Icon="Ban" Height="20" Width="20" Foreground="OrangeRed"/>
                                <TextBlock Margin="0" VerticalAlignment="Center" Foreground="OrangeRed" FontWeight="Bold">Not Authorized</TextBlock>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    <Expander Header="Show Token (this should be kept secret!)">
                        <TextBox Name="AuthTokenTextBox" IsReadOnly="True"/>    
                    </Expander>
                    <Separator Height="20"/>
                    <TextBlock TextWrapping="Wrap">
                        By default the bot will use your main account. This means it will be your name that appears when the bot says things. If you want to use a different account for the bot then first create a new twitch account with the bot name you want, sign into it on Twitch, then click Authorize Bot Separately
                    </TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <Button Content="Authorize Bot Separately" Margin="15" HorizontalAlignment="Left" Click="GenerateBotToken_OnClick"/>
                        <StackPanel Orientation="Horizontal" Visibility="Collapsed" Name="GenerateBotTokenCancel">
                            <Button Click="CancelAuth_OnClick" >
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock>Cancel</TextBlock>
                                    <fa:ImageAwesome Icon="Spinner" Spin="True" Height="20" Width="20" />
                                </StackPanel>
                            </Button>
                            <TextBlock FontSize="15" VerticalAlignment="Center" FontStyle="Italic" Foreground="Indigo">Switch to your web browser now to grant authorization!</TextBlock>
                        </StackPanel>
                        <Button Name="UseMainAccountForBotButton" Margin="15" Content="Use Main Account for Bot"  HorizontalAlignment="Left" Click="UseMainAccountForBot_OnClick"/>
                    </StackPanel>
                    <Expander Header="Show Bot Token (this should be kept secret!)">
                        <TextBox Name="BotAccessTokenTextBox" IsReadOnly="True"/>    
                    </Expander>
                    <Separator Height="20"/>
                    <TextBlock TextWrapping="Wrap">
                        If you want to revoke access for any reason (for instance you think one of your tokens was compromised), go to <Hyperlink 
                            NavigateUri="https://www.twitch.tv/settings/connections"
                            RequestNavigate="Hyperlink_RequestNavigate">
                            https://www.twitch.tv/settings/connections
                        </Hyperlink>, and disconnect the BannerlordIntegrationMod.
                    </TextBlock>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DockPanel>
</adonisControls:AdonisWindow>
